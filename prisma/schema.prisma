generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String      @id @default(uuid())
  email        String      @unique
  name         String?
  firstName    String
  lastName     String
  password     String
  number       String?
  // Roles Type: student | examinator | administrator
  role         String      @default("student")
  groups       Group[]
  events       Event[]
  todos        DailyToDo[]
  foremanGroup Group[]     @relation("foreman")
}

model Group {
  id             String   @id @default(uuid())
  name           String
  description    String
  groupCode      String   @unique
  createdAt      DateTime @default(now())
  users          User[]
  creatorId      String?
  events         Event[]
  foreman        User?    @relation("foreman", fields: [foremanId], references: [id])
  foremanId      String?
}

model Event {
  id          String   @id @default(uuid())
  name        String
  description String
  startDate   DateTime
  endDate     DateTime
  // Status Type: requested | inProgress | future | ended
  status      String
  hasEnded    Boolean  @default(false)
  user        User?    @relation(fields: [userId], references: [id])
  userId      String?
  group       Group?   @relation(fields: [groupId], references: [id])
  groupId     String?
}

model DailyToDo {
  id        String   @id @default(uuid())
  text      String
  createdAt DateTime @default(now())
  isDeleted Boolean  @default(false)
  user      User?    @relation(fields: [userId], references: [id])
  userId    String?
}

// Information about the many-to-many in prisma
// https://www.prisma.io/docs/concepts/components/prisma-schema/relations/many-to-many-relations
// model GroupsOnUsers {
//   user       User     @relation(fields: [userId], references: [id])
//   userId     String
//   group      Group    @relation(fields: [groupId], references: [id])
//   groupId    String
//   assignedAt DateTime @default(now())
//   assignedBy String

//   @@id([userId, groupId])
// }
